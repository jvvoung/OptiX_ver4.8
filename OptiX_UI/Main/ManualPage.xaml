<UserControl x:Class="OptiX.Main.ManualPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1200">
    <UserControl.Resources>
        <!-- BooleanToVisibilityConverter -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- 그림자 효과 정의 -->
        <DropShadowEffect x:Key="DropShadowEffect" 
                          Color="#40000000" 
                          BlurRadius="8" 
                          ShadowDepth="2" 
                          Direction="270"/>

        <!-- 라이트 모드 색상 팔레트 (OpticPage와 동일) -->
        <SolidColorBrush x:Key="PrimaryColor" Color="#8B5CF6"/>
        <SolidColorBrush x:Key="PrimaryDarkColor" Color="#7C3AED"/>
        <SolidColorBrush x:Key="PrimaryLightColor" Color="#A78BFA"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#10B981"/>
        <SolidColorBrush x:Key="SecondaryDarkColor" Color="#059669"/>
        <SolidColorBrush x:Key="AccentColor" Color="#F59E0B"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#F8FAFC"/>
        <SolidColorBrush x:Key="SurfaceColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="CardColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BorderColor" Color="#E2E8F0"/>
        <SolidColorBrush x:Key="TextPrimaryColor" Color="#1E293B"/>
        <SolidColorBrush x:Key="TextSecondaryColor" Color="#64748B"/>
        <SolidColorBrush x:Key="TextMutedColor" Color="#94A3B8"/>

        <!-- 다크 모드 색상 팔레트 (OpticPage와 동일) -->
        <SolidColorBrush x:Key="DarkBackgroundColor" Color="#0F172A"/>
        <SolidColorBrush x:Key="DarkSurfaceColor" Color="#1E293B"/>
        <SolidColorBrush x:Key="DarkCardColor" Color="#334155"/>
        <SolidColorBrush x:Key="DarkBorderColor" Color="#475569"/>
        <SolidColorBrush x:Key="DarkTextPrimaryColor" Color="#F1F5F9"/>
        <SolidColorBrush x:Key="DarkTextSecondaryColor" Color="#CBD5E1"/>
        <SolidColorBrush x:Key="DarkTextMutedColor" Color="#94A3B8"/>

        <!-- 동적 색상 팔레트 (OpticPage와 동일) -->
        <SolidColorBrush x:Key="DynamicBackgroundColor" Color="#F8FAFC"/>
        <SolidColorBrush x:Key="DynamicSurfaceColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="DynamicCardColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="DynamicBorderColor" Color="#E2E8F0"/>
        <SolidColorBrush x:Key="DynamicTextPrimaryColor" Color="#1E293B"/>
        <SolidColorBrush x:Key="DynamicTextSecondaryColor" Color="#64748B"/>
        <SolidColorBrush x:Key="DynamicTextMutedColor" Color="#94A3B8"/>
        <SolidColorBrush x:Key="DynamicTextColor" Color="#1E293B"/>

        <!-- 모던 카드 스타일 (OpticPage와 유사) -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource DynamicSurfaceColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DynamicBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.1" ShadowDepth="2" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 섹션 제목 스타일 (OpticPage와 유사) -->
        <Style x:Key="SectionTitleStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextPrimaryColor}"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>

        <!-- 서브 섹션 제목 스타일 (OpticPage와 유사) -->
        <Style x:Key="SubSectionTitleStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextPrimaryColor}"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
        </Style>

        <!-- 모던 컨트롤 라벨 스타일 -->
        <Style x:Key="ModernControlLabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextPrimaryColor}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="Width" Value="80"/>
        </Style>

        <!-- 모던 버튼 스타일 (OpticPage와 유사) -->
        <Style x:Key="SmallButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryLightColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 연결됨 상태 버튼 스타일 (초록색) -->
        <Style x:Key="ConnectedButtonStyle" TargetType="Button" BasedOn="{StaticResource SmallButtonStyle}">
            <Setter Property="Background" Value="#10B981"/> <!-- 초록색 -->
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#059669"/> <!-- 어두운 초록색 -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#047857"/> <!-- 더 어두운 초록색 -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 연결 안됨 상태 버튼 스타일 (빨간색) -->
        <Style x:Key="DisconnectedButtonStyle" TargetType="Button" BasedOn="{StaticResource SmallButtonStyle}">
            <Setter Property="Background" Value="#EF4444"/> <!-- 빨간색 -->
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#DC2626"/> <!-- 어두운 빨간색 -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#B91C1C"/> <!-- 더 어두운 빨간색 -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 초기 상태 버튼 스타일 (보라색) -->
        <Style x:Key="InitialButtonStyle" TargetType="Button" BasedOn="{StaticResource SmallButtonStyle}">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/> <!-- 보라색 -->
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/> <!-- 어두운 보라색 -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryLightColor}"/> <!-- 밝은 보라색 -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 세컨더리 버튼 스타일 (OPTIC과 동일) -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource DynamicSurfaceColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DynamicBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextPrimaryColor}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8"
                                Padding="16,12">
                            <Border.Effect>
                                <DropShadowEffect Color="#000000" 
                                                Opacity="0.05" 
                                                BlurRadius="4" 
                                                ShadowDepth="1" 
                                                Direction="270"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource DynamicBackgroundColor}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#000000" 
                                                        Opacity="0.1" 
                                                        BlurRadius="8" 
                                                        ShadowDepth="2" 
                                                        Direction="270"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource DynamicBackgroundColor}"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#000000" 
                                                        Opacity="0.02" 
                                                        BlurRadius="2" 
                                                        ShadowDepth="0" 
                                                        Direction="270"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 탭 버튼 스타일 (OpticPage와 완전히 동일) -->
        <Style x:Key="TabButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,12"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8,8,0,0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 활성 탭 버튼 스타일 (OpticPage와 완전히 동일) -->
        <Style x:Key="ActiveTabButtonStyle" TargetType="Button" BasedOn="{StaticResource TabButtonStyle}">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid 헤더 스타일 (OpticPage와 동일) -->
        <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <!-- DataGrid 셀 스타일 (OpticPage와 동일) -->
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="{DynamicResource DynamicSurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextColor}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF0078D4"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid 행 스타일 (OpticPage와 동일) -->
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="{DynamicResource DynamicSurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextColor}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF0078D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="#FF005A9E"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE3F2FD"/>
                    <Setter Property="Foreground" Value="{DynamicResource DynamicTextColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 컬럼 텍스트 중앙 정렬 스타일 -->
        <Style x:Key="CenteredTextColumnStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- 모던 텍스트박스 스타일 (Manual 페이지용 - 글자 크기 및 표시 개선) -->
        <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource DynamicSurfaceColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DynamicTextPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DynamicBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="MinHeight" Value="28"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        VerticalScrollBarVisibility="Hidden"
                                        HorizontalScrollBarVisibility="Hidden"
                                        Focusable="false"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Voltage 텍스트박스 전용 스타일 (글자 크기 2 작게) -->
        <Style x:Key="VoltageTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource ModernTextBoxStyle}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
    </UserControl.Resources>

    <Grid Background="{DynamicResource DynamicBackgroundColor}">
        <!-- 뒤로가기 버튼 (OPTIC과 동일한 스타일) -->
        <Button x:Name="BackButton" 
                Width="60" 
                Height="40" 
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="4,4,0,0"
                Style="{StaticResource SecondaryButtonStyle}"
                FontSize="20" 
                FontWeight="Bold"
                Click="BackButton_Click">
            <TextBlock Text="←" 
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"
                       FontSize="20"
                       FontWeight="Bold"/>
        </Button>

        <!-- 메인 콘텐츠 영역 (OPTIC과 동일한 마진) -->
        <Grid Margin="4,48,4,4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- 1. 데이터 테이블 영역 (왼쪽 전체) -->
            <Border Grid.Column="0" Grid.RowSpan="2"
                    Background="{DynamicResource DynamicSurfaceColor}"
                    BorderBrush="{DynamicResource DynamicBorderColor}"
                    BorderThickness="1"
                    CornerRadius="8">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- 데이터 테이블 제목과 컨트롤 (더 진한 다크 배경) -->
                    <Border Grid.Row="0" 
                            Background="{DynamicResource DynamicBackgroundColor}" 
                            CornerRadius="12,12,0,0" 
                            Height="48">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" 
                                       Text="📊 DATA TABLE" 
                                       Style="{StaticResource SectionTitleStyle}"
                                       VerticalAlignment="Center"
                                       Margin="12,0,0,0"/>

                            <!-- RESET 버튼 -->
                            <Button Grid.Column="1" 
                                    x:Name="ResetButton"
                                    Content="🔄 RESET" 
                                    Style="{StaticResource SmallButtonStyle}"
                                    Width="80"
                                    Height="28"
                                    VerticalAlignment="Center"
                                    Margin="0,0,12,0"
                                    Click="ResetButton_Click"/>
                        </Grid>
                    </Border>

                    <!-- 데이터 그리드 -->
                    <DataGrid Grid.Row="1" 
                              x:Name="DataTableGrid"
                              Margin="0"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="True"
                              CanUserSortColumns="True"
                              HeadersVisibility="Column"
                              GridLinesVisibility="All"
                              AlternatingRowBackground="{DynamicResource DynamicSurfaceColor}"
                              RowBackground="{DynamicResource DynamicSurfaceColor}"
                              BorderBrush="Transparent"
                              BorderThickness="0"
                              Background="{DynamicResource DynamicSurfaceColor}"
                              Foreground="{DynamicResource DynamicTextColor}"
                              ColumnHeaderStyle="{StaticResource DataGridHeaderStyle}"
                              RowStyle="{StaticResource DataGridRowStyle}"
                              CellStyle="{StaticResource DataGridCellStyle}"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              EnableRowVirtualization="False">
                        <DataGrid.Columns>
                            <!-- NUM -->
                            <DataGridTextColumn Header="NUM" 
                                                Binding="{Binding Num}" 
                                                Width="60" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- L -->
                            <DataGridTextColumn Header="L" 
                                                Binding="{Binding L}" 
                                                Width="80" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- x -->
                            <DataGridTextColumn Header="x" 
                                                Binding="{Binding X}" 
                                                Width="80" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- y -->
                            <DataGridTextColumn Header="y" 
                                                Binding="{Binding Y}" 
                                                Width="80" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- u -->
                            <DataGridTextColumn Header="u" 
                                                Binding="{Binding U}" 
                                                Width="80" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- v -->
                            <DataGridTextColumn Header="v" 
                                                Binding="{Binding V}" 
                                                Width="80" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- Current -->
                            <DataGridTextColumn Header="Current" 
                                                Binding="{Binding Current}" 
                                                Width="80" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <!-- Efficiency -->
                            <DataGridTextColumn Header="Efficiency" 
                                                Binding="{Binding Efficiency}" 
                                                Width="*" 
                                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextColumnStyle}"/>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>

            <!-- 2. 색좌표 + 컨트롤 패널 영역 (오른쪽 전체) -->
            <Border Grid.Column="1" Grid.RowSpan="2"
                    Style="{StaticResource CardStyle}"
                    Padding="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- 색좌표 영역 -->
                    <Grid Grid.Row="0" Background="{DynamicResource DynamicSurfaceColor}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- 탭 버튼들 (OpticPage와 동일한 스타일) -->
                        <Border Grid.Row="0" 
                                Background="{DynamicResource DynamicBackgroundColor}" 
                                CornerRadius="12,12,0,0" 
                                Height="48">
                            <StackPanel Orientation="Horizontal" 
                                        VerticalAlignment="Center" 
                                        Margin="12,0">
                                <Button x:Name="Cie1931Button"
                                        Content="CIE1931" 
                                        Style="{StaticResource ActiveTabButtonStyle}"
                                        Click="Cie1931Button_Click"/>
                                <Button x:Name="Cie1976Button"
                                        Content="CIE1976" 
                                        Style="{StaticResource TabButtonStyle}"
                                        Click="Cie1976Button_Click"/>
                            </StackPanel>
                        </Border>

                        <!-- 콘텐츠 영역 -->
                        <Border Grid.Row="1" 
                                Background="{DynamicResource DynamicSurfaceColor}" 
                                CornerRadius="0,0,12,12">
                            <Grid Margin="12">
                                <!-- CIE1931 영역 -->
                                <Grid x:Name="Cie1931Area" Visibility="Visible">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- CIE1931 색좌표 그림 -->
                                    <Border Background="{DynamicResource DynamicSurfaceColor}"
                                            BorderBrush="{DynamicResource DynamicBorderColor}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Margin="0">
                                        <Grid>
                                            <!-- CIE 1931 색도 다이어그램 이미지 -->
                                            <Image Source="/Images/CIExy1931.png" Stretch="Uniform"/>

                                            <!-- 측정점 오버레이를 위한 Canvas (동적 좌표 표시용) -->
                                            <Canvas x:Name="Cie1931Canvas" 
                                                    HorizontalAlignment="Stretch" 
                                                    VerticalAlignment="Stretch"
                                                    SizeChanged="CieCanvas_SizeChanged"/>
                                        </Grid>
                                    </Border>

                                </Grid>

                                <!-- CIE1976 영역 -->
                                <Grid x:Name="Cie1976Area" Visibility="Collapsed">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- CIE1976 색좌표 그림 -->
                                    <Border Background="{DynamicResource DynamicSurfaceColor}"
                                            BorderBrush="{DynamicResource DynamicBorderColor}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Margin="0">
                                        <Grid>
                                            <!-- CIE 1976 색도 다이어그램 이미지 -->
                                            <Image Source="/Images/CIE_1976.png" Stretch="Uniform"/>

                                            <!-- 측정점 오버레이를 위한 Canvas (동적 좌표 표시용) -->
                                            <Canvas x:Name="Cie1976Canvas" 
                                                    HorizontalAlignment="Stretch" 
                                                    VerticalAlignment="Stretch"
                                                    SizeChanged="CieCanvas_SizeChanged"/>
                                        </Grid>
                                    </Border>

                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>

                    <!-- 컨트롤 패널 영역 -->
                    <Border Grid.Row="1" 
                            Style="{StaticResource CardStyle}"
                            Margin="0,8,0,0"
                            Padding="16">
                        <Grid Background="{DynamicResource DynamicSurfaceColor}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- PG 섹션 -->
                            <Grid Grid.Row="0">
                                <!-- PG 컨트롤 (제목 제거) -->
                                <Border Background="{DynamicResource DynamicCardColor}"
                                        BorderBrush="{DynamicResource DynamicBorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="12"
                                        Padding="12"
                                        Effect="{StaticResource DropShadowEffect}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <!-- Port Row -->
                                        <Grid Grid.Row="0" Margin="0,0,0,8">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" 
                                                       Text="PG_Port" 
                                                       Style="{StaticResource ModernControlLabelStyle}"/>
                                            <TextBox Grid.Column="1" 
                                                     x:Name="PgPortTextBox"
                                                     Height="28"
                                                     Margin="0,0,8,0"
                                                     Style="{StaticResource ModernTextBoxStyle}"/>
                                            <Button Grid.Column="2" 
                                                    x:Name="PgConnectButton"
                                                    Content="CONNECT" 
                                                    Style="{StaticResource SmallButtonStyle}"
                                                    Width="80"
                                                    Height="28"
                                                    Click="PgConnectButton_Click"/>
                                        </Grid>

                                        <!-- Pattern Row -->
                                        <Grid Grid.Row="1" Margin="0,0,0,8">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" 
                                                       Text="PG_Pattern" 
                                                       Style="{StaticResource ModernControlLabelStyle}"/>
                                            <TextBox Grid.Column="1" 
                                                     x:Name="PatternTextBox"
                                                     Height="28"
                                                     Margin="0,0,8,0"
                                                     Style="{StaticResource ModernTextBoxStyle}"/>
                                            <!-- Pattern용 SEND 버튼 -->
                                            <Button Grid.Column="2" 
                                                    x:Name="PatternSendButton"
                                                    Content="SEND" 
                                                    Style="{StaticResource SmallButtonStyle}"
                                                    Width="80"
                                                    Height="28"
                                                    Click="PatternSendButton_Click"/>
                                        </Grid>

                                        <!-- Voltage Row -->
                                        <Grid Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" 
                                                       Text="PG_Voltage" 
                                                       Style="{StaticResource ModernControlLabelStyle}"/>
                                            <Grid Grid.Column="1" 
                                                  Margin="0,0,8,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="4"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="4"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox Grid.Column="0"
                                                         x:Name="Voltage1TextBox"
                                                         Height="28"
                                                         Style="{StaticResource VoltageTextBoxStyle}"/>
                                                <TextBox Grid.Column="2"
                                                         x:Name="Voltage2TextBox"
                                                         Height="28"
                                                         Style="{StaticResource VoltageTextBoxStyle}"/>
                                                <TextBox Grid.Column="4"
                                                         x:Name="Voltage3TextBox"
                                                         Height="28"
                                                         Style="{StaticResource VoltageTextBoxStyle}"/>
                                            </Grid>
                                            <!-- Voltage용 SEND 버튼 -->
                                            <Button Grid.Column="2" 
                                                    x:Name="VoltageSendButton"
                                                    Content="SEND" 
                                                    Style="{StaticResource SmallButtonStyle}"
                                                    Width="80"
                                                    Height="28"
                                                    Click="VoltageSendButton_Click"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>

                            <!-- MEASUREMENT 섹션 -->
                            <Grid Grid.Row="2" Margin="0,8,0,0">
                                <!-- MEASUREMENT 컨트롤 (제목 제거) -->
                                <Border Background="{DynamicResource DynamicCardColor}"
                                        BorderBrush="{DynamicResource DynamicBorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="12"
                                        Padding="12"
                                        Effect="{StaticResource DropShadowEffect}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- MEAS_Port -->
                                        <TextBlock Grid.Column="0" 
                                                   Text="MEAS_Port" 
                                                   Style="{StaticResource ModernControlLabelStyle}"/>
                                        <TextBox 
                                                 x:Name="MeasurePortTextBox"
                                                 Height="28"
                                                 Margin="74,0,8,0"
                                                 Style="{StaticResource ModernTextBoxStyle}" Grid.ColumnSpan="2"/>
                                        <Button Grid.Column="2" 
                                                x:Name="MeasureConnectButton"
                                                Content="CONNECT" 
                                                Style="{StaticResource SmallButtonStyle}"
                                                Height="28"
                                                Margin="0,6,0,6"
                                                Click="MeasureConnectButton_Click"/>
                                        <Button Grid.Column="3" 
                                                x:Name="MeasureButton"
                                                Content="MEASURE" 
                                                Style="{StaticResource SmallButtonStyle}"
                                                Height="28"
                                                Click="MeasureButton_Click" Margin="10,6,0,6"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>